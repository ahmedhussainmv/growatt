<div class="container-fluid" style="max-width: 1200px">
  <div class="row mt-2 mb-2">
    <div class="col">
      <div class="card text-center p-2">
        <h3>Solar Statistics for <span id="plant-name"></span></h3>
        <h5>
          <span id="plant-island"></span> / <span id="plant-country"></span>
        </h5>
        <p>Since <span id="created-date"></span></p>
      </div>
    </div>
  </div>

  <div class="row my-4">
    <div class="col">
      <div class="card bg-warning">
        <div class="card-header h3">Today</div>
        <ul class="list-group list-group-flush">
          <li class="list-group-item d-flex justify-content-between">
            Energy: <span id="etoday" class="h1"></span>
          </li>
          <li class="list-group-item d-flex justify-content-between">
            Savings: <span id="mtoday" class="h1"></span>
          </li>
        </ul>
      </div>
    </div>
    <div class="col">
      <div class="card bg-success">
        <div class="card-header h3">Total</div>
        <ul class="list-group list-group-flush">
          <li class="list-group-item d-flex justify-content-between">
            Energy: <span id="etotal" class="h1"></span>
          </li>
          <li class="list-group-item d-flex justify-content-between">
            Savings: <span id="mtotal" class="h1"></span>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col" style="height: 50vh">
      <canvas class="card p-4" id="myChart"></canvas>
      <p>Last updated : <span id="last-updated"></span></p>
    </div>
  </div>
</div>

<script>
  //setup
  const datasetLabels = [];
  const datasetData = [];
  let configData = {};

  //config
  configData = {
    labels: datasetLabels,
    datasets: [
      {
        label: "Today's Energy Savings",
        backgroundColor: "rgb(255, 99, 132)",
        borderColor: "rgb(255, 99, 132)",
        data: datasetData,
        fill: false,
        cubicInterpolationMode: 'monotone',
        tension: 0.4
      },
    ],
  };

  const config = {
    type: "line",
    data: configData,
    options: {
      responsive: true,
      plugins: {
        title: {
          display: true,
          text: "Solar stat chart - Hira School",
        },
      },
      interaction: {
        intersect: false,
      },
      scales: {
        x: {
          display: true,
          title: {
            display: true,
          },
        },
        y: {
          display: true,
          title: {
            display: true,
            text: "Value",
          },
          suggestedMin: -10,
          suggestedMax: 200,
        },
      },
    },
  };

  //chart
  const myChart = new Chart(document.getElementById("myChart"), config);
  const UPDATE_INTERVAL = Number(`<%= UPDATE_INTERVAL %>`) * 1.25;

  function fetchAndUpdate() {
    axios
      .get(`/api`, { timeout: 30000 })
      .then((res) => {
        removeData(myChart);
        res.data.db.data.forEach((element) => {
          addData(myChart, String(element.dateTime), element.eTotal);
        });

        let lastStats = res.data.db.data[res.data.db.data.length - 1];
        document.querySelector("#last-updated").innerHTML = `<%= timestamp %>`;
        document.querySelector("#etoday").innerHTML =
          lastStats.eToday > 0 ? lastStats.eToday + " kWh" : "NA";
        document.querySelector("#mtoday").innerHTML =
          lastStats.mToday > 0 ? "MVR." + lastStats.mToday : "NA";
        document.querySelector("#etotal").innerHTML =
          lastStats.eTotal > 0 ? lastStats.eTotal + " kWh" : "NA";
        document.querySelector("#mtotal").innerHTML =
          lastStats.mTotal > 0 ? "MVR." + lastStats.mTotal : "NA";
        document.querySelector("#plant-name").innerHTML =
          res.data.db.plantInfo.plantName;
        document.querySelector("#plant-island").innerHTML =
          res.data.db.plantInfo.plantIsland;
        document.querySelector("#plant-country").innerHTML =
          res.data.db.plantInfo.plantCountry;
        document.querySelector("#created-date").innerHTML =
          res.data.db.plantInfo.createdDate;
      });
    setTimeout(fetchAndUpdate, UPDATE_INTERVAL);
  }

  $(document).ready(function () {
    fetchAndUpdate();
  });

  function addData(chart, label, data) {
    if (chart.data.labels.indexOf(label) == -1) {
      chart.data.labels.push(label);
      chart.data.datasets.forEach((dataset) => {
        dataset.data.push(data);
      });
      if (chart.data.labels.length > 50) {
        chart.data.labels.shift();
      }
    }
    chart.update();
  }

  function removeData(chart) {
    chart.data.labels.pop();
    chart.data.datasets.forEach((dataset) => {
      dataset.data.pop();
    });
    chart.update();
  }
</script>
